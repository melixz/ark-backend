services:
  backend:
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    container_name: backend
    command: gunicorn backend.wsgi:application --bind 0.0.0.0:8000 --timeout 120
    volumes:
      - ./backend:/app
      - ./backend/static:/app/static  # Монтируем директорию для статики (соответствует STATIC_ROOT)
      - ./backend/media:/app/media  # Монтируем директорию с медиа-файлами
    environment:
      - DEBUG=0
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - db
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: frontend.dockerfile
    container_name: frontend
    stdin_open: true
    tty: true
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"

  db:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  nginx:
    build: ./nginx
    container_name: nginx
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./backend/static:/app/static  # Статические файлы для Nginx
      - ./backend/media:/app/media  # Медиа-файлы для Nginx
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
